# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: CI/CD Pipeline

on:
  push:
    tags:
      - "*"

jobs:
  
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Clean
        run: npm ci
      - uses: actions/setup-python@v4.5.0
        with:
          python-version: 3.7
      - name: Build Assets
        run: python3 scripts/parse_csv.py
      - name: Build
        run: npm run build:production
      - name: Remove Unused Files
        run: | 
           rm "dist/.tsbuildinfo"
      - name: Upload Dist
        uses: actions/upload-artifact@v3.1.2
        with:
          name: target_commonjs
          path: dist        
          retention-days: 1
          if-no-files-found: error
      - name: Upload JSON
        uses: actions/upload-artifact@v3.1.2
        with: 
          name: losungen_json
          path: losungen.json
     
          
  publish:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4.5.0
      with:
        python-version: 3.7
    - name: Check Version
      run: python3 scripts/check_version.py  >> $GITHUB_ENV
    - name: Download Dist
      uses: actions/download-artifact@v2.1.1
      with:
        name: target_commonjs
        path: dist
    - name: Download JSON
      uses: actions/download-artifact@v2.1.1
      with:
        name: losungen_json
        path: losungen.json
    - name: Bundle
      run: | 
              rm share/*
              zip -r ${{ github.event.repository.name }}-release-${{github.ref_name}}.zip . -x "*.csv" "share/*" "scripts/*" "dist/.tsbuildinfo" "node_modules/*" "typings/*" "src/*" ".git/*" ".github/*" "node_modules/*" ".gitignore" "**/*.js.map" "tsconfig.json"
    - name: Publish
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: Release ${{ github.ref_name}}
        prerelease: ${{ env.is_prerelease }}
        files:  ${{ github.event.repository.name }}-release-${{github.ref_name}}.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
